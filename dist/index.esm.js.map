{"version":3,"file":"index.esm.js","sources":["../src/index.ts"],"sourcesContent":["import { promises as fs } from 'fs'\nimport os from 'os'\nimport path from 'path'\n\nimport { PuppeteerBlocker } from '@ghostery/adblocker-puppeteer'\nimport fetch from 'cross-fetch'\nimport { PuppeteerExtraPlugin } from 'puppeteer-extra-plugin'\n\nconst PKG_NAME = 'puppeteer-extra-plugin-adblocker';\nconst PKG_VERSION = '2.13.6';\nconst engineCacheFilename = `${PKG_NAME}-${PKG_VERSION}-engine.bin`\n\n/** Available plugin options */\nexport interface PluginOptions {\n  /** Whether or not to block trackers (in addition to ads). Default: false */\n  blockTrackers: boolean\n  /** Whether or not to block trackers and other annoyances, including cookie\n      notices. Default: false */\n  blockTrackersAndAnnoyances: boolean\n  /** Persist adblocker engine cache to disk for speedup. Default: true */\n  useCache: boolean\n  /** Optional custom directory for adblocker cache files. Default: undefined */\n  cacheDir?: string\n  /** Optional custom priority for interception resolution. Default: undefined */\n  interceptResolutionPriority?: number\n}\n\n/**\n * A puppeteer-extra plugin to automatically block ads and trackers.\n */\nexport class PuppeteerExtraPluginAdblocker extends PuppeteerExtraPlugin {\n  private blocker: PuppeteerBlocker | undefined\n\n  constructor(opts: Partial<PluginOptions>) {\n    super(opts)\n    this.debug('Initialized', this.opts)\n  }\n\n  get name() {\n    return 'adblocker'\n  }\n\n  get defaults(): PluginOptions {\n    return {\n      blockTrackers: false,\n      blockTrackersAndAnnoyances: false,\n      useCache: true,\n      cacheDir: undefined,\n      interceptResolutionPriority: undefined\n    }\n  }\n\n  get engineCacheFile() {\n    const cacheDir = this.opts.cacheDir || os.tmpdir()\n    return path.join(cacheDir, engineCacheFilename)\n  }\n\n  /**\n   * Cache an instance of `PuppeteerBlocker` to disk if 'cacheDir' option was\n   * specified for the plugin. It can then be used the next time this plugin is\n   * used to load the adblocker faster.\n   */\n  private async persistToCache(blocker: PuppeteerBlocker): Promise<void> {\n    if (!this.opts.useCache) {\n      return\n    }\n    this.debug('persist to cache', this.engineCacheFile)\n    await fs.writeFile(this.engineCacheFile, blocker.serialize())\n  }\n\n  /**\n   * Initialize instance of `PuppeteerBlocker` from cache if possible.\n   * Otherwise, it throws and we will try to initialize it from remote instead.\n   */\n  private async loadFromCache(): Promise<PuppeteerBlocker> {\n    if (!this.opts.useCache) {\n      throw new Error('caching disabled')\n    }\n    this.debug('load from cache', this.engineCacheFile)\n    return PuppeteerBlocker.deserialize(\n      new Uint8Array(await fs.readFile(this.engineCacheFile))\n    )\n  }\n\n  /**\n   * Initialize instance of `PuppeteerBlocker` from remote (either by fetching\n   * a serialized version of the engine when available, or by downloading raw\n   * lists for filters such as EasyList then parsing them to initialize\n   * blocker).\n   */\n  private async loadFromRemote(): Promise<PuppeteerBlocker> {\n    this.debug('load from remote', {\n      blockTrackers: this.opts.blockTrackers,\n      blockTrackersAndAnnoyances: this.opts.blockTrackersAndAnnoyances\n    })\n    if (this.opts.blockTrackersAndAnnoyances === true) {\n      return PuppeteerBlocker.fromPrebuiltFull(fetch)\n    } else if (this.opts.blockTrackers === true) {\n      return PuppeteerBlocker.fromPrebuiltAdsAndTracking(fetch)\n    } else {\n      return PuppeteerBlocker.fromPrebuiltAdsOnly(fetch)\n    }\n  }\n\n  /**\n   * Return instance of `PuppeteerBlocker`. It will take care of initializing\n   * it if necessary (first time it is called), or return the existing instance\n   * if it already exists.\n   */\n  async getBlocker(): Promise<PuppeteerBlocker> {\n    this.debug('getBlocker', { hasBlocker: !!this.blocker })\n    if (this.blocker === undefined) {\n      try {\n        this.blocker = await this.loadFromCache()\n        this.setRequestInterceptionPriority()\n      } catch (ex) {\n        this.blocker = await this.loadFromRemote()\n        this.setRequestInterceptionPriority()\n        await this.persistToCache(this.blocker)\n      }\n    }\n    return this.blocker\n  }\n\n  /**\n   * Sets the request interception priority on the `PuppeteerBlocker` instance.\n   */\n  private setRequestInterceptionPriority(): void {\n    this.blocker?.setRequestInterceptionPriority(this.opts.interceptResolutionPriority)\n  }\n\n  /**\n   * Hook into this blocking event to make sure the cache is initialized before navigation.\n   */\n  async beforeLaunch() {\n    this.debug('beforeLaunch')\n    await this.getBlocker()\n  }\n\n  /**\n   * Hook into this blocking event to make sure the cache is initialized before navigation.\n   */\n  async beforeConnect() {\n    this.debug('beforeConnect')\n    await this.getBlocker()\n  }\n\n  /**\n   * Enable adblocking in `page`.\n   */\n  async onPageCreated(page: any) {\n    this.debug('onPageCreated')\n    ;(await this.getBlocker()).enableBlockingInPage(page)\n  }\n}\n\n// Export the factory function as both default and named export\nexport const createAdblocker = (options: Partial<PluginOptions> = {}) => {\n  return new PuppeteerExtraPluginAdblocker(options)\n}\n\n// Keep the default export too\nexport default createAdblocker\n"],"names":["fs"],"mappings":";;;;;;;;;;;;AAQA,MAAM,QAAQ,GAAG,kCAAkC;AACnD,MAAM,WAAW,GAAG,QAAQ;AAC5B,MAAM,mBAAmB,GAAG,CAAA,EAAG,QAAQ,CAAI,CAAA,EAAA,WAAW,aAAa;AAiBnE;;AAEG;AACG,MAAO,6BAA8B,SAAQ,oBAAoB,CAAA;AAC7D,IAAA,OAAO;AAEf,IAAA,WAAA,CAAY,IAA4B,EAAA;QACtC,KAAK,CAAC,IAAI,CAAC;QACX,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,IAAI,CAAC,IAAI,CAAC;;AAGtC,IAAA,IAAI,IAAI,GAAA;AACN,QAAA,OAAO,WAAW;;AAGpB,IAAA,IAAI,QAAQ,GAAA;QACV,OAAO;AACL,YAAA,aAAa,EAAE,KAAK;AACpB,YAAA,0BAA0B,EAAE,KAAK;AACjC,YAAA,QAAQ,EAAE,IAAI;AACd,YAAA,QAAQ,EAAE,SAAS;AACnB,YAAA,2BAA2B,EAAE;SAC9B;;AAGH,IAAA,IAAI,eAAe,GAAA;AACjB,QAAA,MAAM,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,IAAI,EAAE,CAAC,MAAM,EAAE;QAClD,OAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,mBAAmB,CAAC;;AAGjD;;;;AAIG;IACK,MAAM,cAAc,CAAC,OAAyB,EAAA;AACpD,QAAA,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YACvB;AACD;QACD,IAAI,CAAC,KAAK,CAAC,kBAAkB,EAAE,IAAI,CAAC,eAAe,CAAC;AACpD,QAAA,MAAMA,QAAE,CAAC,SAAS,CAAC,IAAI,CAAC,eAAe,EAAE,OAAO,CAAC,SAAS,EAAE,CAAC;;AAG/D;;;AAGG;AACK,IAAA,MAAM,aAAa,GAAA;AACzB,QAAA,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;AACvB,YAAA,MAAM,IAAI,KAAK,CAAC,kBAAkB,CAAC;AACpC;QACD,IAAI,CAAC,KAAK,CAAC,iBAAiB,EAAE,IAAI,CAAC,eAAe,CAAC;AACnD,QAAA,OAAO,gBAAgB,CAAC,WAAW,CACjC,IAAI,UAAU,CAAC,MAAMA,QAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CACxD;;AAGH;;;;;AAKG;AACK,IAAA,MAAM,cAAc,GAAA;AAC1B,QAAA,IAAI,CAAC,KAAK,CAAC,kBAAkB,EAAE;AAC7B,YAAA,aAAa,EAAE,IAAI,CAAC,IAAI,CAAC,aAAa;AACtC,YAAA,0BAA0B,EAAE,IAAI,CAAC,IAAI,CAAC;AACvC,SAAA,CAAC;AACF,QAAA,IAAI,IAAI,CAAC,IAAI,CAAC,0BAA0B,KAAK,IAAI,EAAE;AACjD,YAAA,OAAO,gBAAgB,CAAC,gBAAgB,CAAC,KAAK,CAAC;AAChD;AAAM,aAAA,IAAI,IAAI,CAAC,IAAI,CAAC,aAAa,KAAK,IAAI,EAAE;AAC3C,YAAA,OAAO,gBAAgB,CAAC,0BAA0B,CAAC,KAAK,CAAC;AAC1D;AAAM,aAAA;AACL,YAAA,OAAO,gBAAgB,CAAC,mBAAmB,CAAC,KAAK,CAAC;AACnD;;AAGH;;;;AAIG;AACH,IAAA,MAAM,UAAU,GAAA;AACd,QAAA,IAAI,CAAC,KAAK,CAAC,YAAY,EAAE,EAAE,UAAU,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;AACxD,QAAA,IAAI,IAAI,CAAC,OAAO,KAAK,SAAS,EAAE;YAC9B,IAAI;gBACF,IAAI,CAAC,OAAO,GAAG,MAAM,IAAI,CAAC,aAAa,EAAE;gBACzC,IAAI,CAAC,8BAA8B,EAAE;AACtC;AAAC,YAAA,OAAO,EAAE,EAAE;gBACX,IAAI,CAAC,OAAO,GAAG,MAAM,IAAI,CAAC,cAAc,EAAE;gBAC1C,IAAI,CAAC,8BAA8B,EAAE;gBACrC,MAAM,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC;AACxC;AACF;QACD,OAAO,IAAI,CAAC,OAAO;;AAGrB;;AAEG;IACK,8BAA8B,GAAA;QACpC,IAAI,CAAC,OAAO,EAAE,8BAA8B,CAAC,IAAI,CAAC,IAAI,CAAC,2BAA2B,CAAC;;AAGrF;;AAEG;AACH,IAAA,MAAM,YAAY,GAAA;AAChB,QAAA,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC;AAC1B,QAAA,MAAM,IAAI,CAAC,UAAU,EAAE;;AAGzB;;AAEG;AACH,IAAA,MAAM,aAAa,GAAA;AACjB,QAAA,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC;AAC3B,QAAA,MAAM,IAAI,CAAC,UAAU,EAAE;;AAGzB;;AAEG;IACH,MAAM,aAAa,CAAC,IAAS,EAAA;AAC3B,QAAA,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC;QAC1B,CAAC,MAAM,IAAI,CAAC,UAAU,EAAE,EAAE,oBAAoB,CAAC,IAAI,CAAC;;AAExD;AAED;MACa,eAAe,GAAG,CAAC,OAAkC,GAAA,EAAE,KAAI;AACtE,IAAA,OAAO,IAAI,6BAA6B,CAAC,OAAO,CAAC;AACnD;;;;"}